=========================
Notes on bash course from IBM DATA ENGINEER COURSERA
=========================

========== simple if then
#!/bin/bash
echo -n "Are ou gay? (y/n) "
read response
if [ $response == 'y' ]; then
echo "I knew it!"
elif [ $response == 'n' ]; then
echo "So sorry.. so so sorry.. babes"
else
echo "Please choose y or n (lower case)"
fi


========== some bash test and math operations
#!/bin/bash
read -r -p "Please insert an int: " int1
if [ -z "$int1" ] ; then
  echo "Please enter a value"
  exit
fi
read -r -p "Please insert an int: " int2
if [ -z "$int2" ] ; then
  echo "Please enter a value"
  exit
fi
sum=$(($int1+$int2))
product=$(($int1*$int2))
echo "The sum of $int1 and $int2 in $sum"
echo "The product of $int1 and $int2 in $product"

if [ $sum -lt $product ]
then
   echo "The sum is less than the product."
elif [[ $sum == $product ]]
then
   echo "The sum is equal to the product."
elif [ $sum -gt $product ]
then
   echo "The sum is greater than the product."
fi





=========== some arrays operations
#!/bin/bash

csv_file="./arrays_table.csv"

# parse table columns into 3 arrays
column_0=($(cut -d "," -f 1 $csv_file))
column_1=($(cut -d "," -f 2 $csv_file))
column_2=($(cut -d "," -f 3 $csv_file))

# print first array
echo "Displaying the first column:"
echo "${column_0[@]}"

## Create a new array as the difference of columns 1 and 2
# initialize array with header
column_3=("column_3")
# get the number of lines in each column
nlines=$(cat $csv_file | wc -l)
echo "There are $nlines lines in the file"
# populate the array
for ((i=1; i<$nlines; i++)); do
  column_3[$i]=$((column_2[$i] - column_1[$i]))
done
echo "${column_3[@]}"

## Combine the new array with the csv file
# first write the new array to file
# initialize the file with a header
echo "${column_3[0]}" > column_3.txt
for ((i=1; i<nlines; i++)); do
  echo "${column_3[$i]}" >> column_3.txt
done
paste -d "," $csv_file column_3.txt > report.csv

